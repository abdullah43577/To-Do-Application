function e(e,t,i){if(!t.has(e))throw new TypeError("attempted to "+i+" private field on non-instance");return t.get(e)}function t(e,t){return t.get?t.get.call(e):t.value}function i(i,s){return t(i,e(i,s,"get"))}function s(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function o(e,t,i){s(e,t),t.set(e,i)}function r(e,t,i){if(t.set)t.set.call(e,i);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=i}}function n(t,i,s){return r(t,e(t,i,"set"),s),s}function l(e,t){if(t.set){if(!t.get)throw new TypeError("attempted to read set only private field");return"__destrWrapper"in t||(t.__destrWrapper={set value(i){t.set.call(e,i)},get value(){return t.get.call(e)}}),t.__destrWrapper}if(!t.writable)throw new TypeError("attempted to set read only private field");return t}function a(t,i){return l(t,e(t,i,"update"))}var d=new WeakMap,c=new WeakMap,h=new WeakMap;new class{_toggleBackgroundColor(){this.body.classList.toggle("dark"),this.body.classList.contains("dark")?(console.log(this.bgToggle.src),this.bgToggle.src="./images/icon-sun.svg",console.log(this.bgToggle.src),this.bgToggle.alt="icon sun"):(this.bgToggle.src="./images/icon-moon.svg",this.bgToggle.alt="icon moon")}_removePreviousActiveNav(){document.querySelectorAll(".nav").forEach((e=>{e.classList.contains("nav-active")&&e.classList.remove("nav-active")}))}_toggleActiveNav(e){this._removePreviousActiveNav(),e.target.classList.add("nav-active")}_showAllTodoItems(){this._renderTodoItem("all")}_showActiveTodoItems(){this._renderTodoItem("active")}_showCompletedTodoItems(){this._renderTodoItem("completed")}_deleteTodo(e){let t=e.target.closest(".delete-container");if(!t)return;let s=i(this,d).findIndex((e=>e.id===parseInt(t.id)));i(this,d).splice(s,1),localStorage.setItem("Todos",JSON.stringify(i(this,d))),this._renderTodoItem("all")}_markCompleted(e){let t=e.target.closest('input[type="checkbox"]');if(!t)return;t.nextElementSibling.classList.toggle("checked");let s=i(this,d).findIndex((e=>e.id===parseInt(t.id)));t.checked?(i(this,d)[s].isCompleted=!0,i(this,d)[s].isActive=!1):(i(this,d)[s].isCompleted=!1,i(this,d)[s].isActive=!0),localStorage.setItem("Todos",JSON.stringify(i(this,d)))}_toggleMenuBtns(e){let t=e.target.closest(".fa-ellipsis");if(!t)return;t.nextElementSibling.classList.toggle("hidden"),t.nextElementSibling.classList.toggle("flex"),setTimeout((()=>{t.nextElementSibling.style.opacity=t.nextElementSibling.classList.contains("hidden")?0:1}),10);let s=t.nextElementSibling.firstElementChild,o=s.parentElement.parentElement.firstElementChild.lastElementChild;s.addEventListener("click",(()=>{this.todoInput.value=o.textContent.trim(),this.todoInput.focus(),t.nextElementSibling.classList.add("hidden"),i(this,d).forEach((e=>{e.isEditing&&(e.isEditing=!1)}));let e=i(this,d).findIndex((e=>e.id===parseInt(s.id)));i(this,d)[e].isEditing=!0,localStorage.setItem("Todos",JSON.stringify(i(this,d)))}))}_renderTodoItem(e){let t=[],s="";if(i(this,d))switch(e){case"all":default:t=i(this,d);break;case"active":t=i(this,d).filter((e=>e.isActive));break;case"completed":t=i(this,d).filter((e=>e.isCompleted))}t.forEach((e=>{s+=`\n        <div class="todo--container relative flex cursor-pointer items-center justify-between border-b border-veryDarkGrayishBlue bg-veryLightGray px-5 py-4 dark:border-veryLightGrayishBlue dark:bg-veryDarkDesaturatedBlue" draggable="true">\n          <div class="todo-content flex items-center">\n            <input type="checkbox" class="mr-3 cursor-pointer" id="${e.id}"/>\n            <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">${e.todo}</p>\n          </div>\n\n          <i class="fa-solid fa-ellipsis fa-lg cursor-pointer text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n\n            <div class="editdel-container absolute right-0 top-8 hidden h-[80px] w-[100px] flex-col justify-center gap-[0.5rem] rounded-lg bg-veryLightGray px-2 z-10 dark:bg-veryDarkGrayishBlue opacity-0">\n                <div class="edit-container flex cursor-pointer items-center justify-around" id="${e.id}">\n                  <i class="fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n                  <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">Edit</p>\n                </div>\n\n                <div class="delete-container flex w-full cursor-pointer items-center justify-around border-t border-veryDarkGrayishBlue pt-2" id="${e.id}">\n                  <i class="fa-solid fa-trash text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n                  <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">Delete</p>\n                </div>\n              </div>\n        </div>`})),this.todoContainer.innerHTML=s||'<div class="relative flex cursor-pointer items-center justify-between bg-veryLightGray px-5 py-4 dark:bg-veryDarkDesaturatedBlue text-veryDarkGrayishBlue dark:text-lightGrayishBlue text-sm">There are no todos at this time!</div>',i(this,d).forEach((e=>{if(e.isCompleted){const t=document.getElementById(e.id);t&&(t.nextElementSibling.classList.add("checked"),t.checked=!0)}}))}_addTodoItem(e){let t;if(e.preventDefault(),n(this,h,i(this,d).some((e=>!0===e.isEditing))),this.todoInput.value)if(i(this,h)){let e=i(this,d).findIndex((e=>e.isEditing));i(this,d)[e].todo=this.todoInput.value,i(this,d)[e].isEditing=!1}else++a(this,c).value,localStorage.setItem("TodosIndex",i(this,c)),t={id:i(this,c),todo:this.todoInput.value.trim(),isActive:!0,isCompleted:!1,isEditing:!1},i(this,d).push(t);localStorage.setItem("Todos",JSON.stringify(i(this,d))),this.todoInput.value="",this._renderTodoItem("all")}constructor(){o(this,d,{writable:!0,value:JSON.parse(localStorage.getItem("Todos"))||[]}),o(this,c,{writable:!0,value:parseInt(localStorage.getItem("TodosIndex"))||0}),o(this,h,{writable:!0,value:void 0}),this.form=document.querySelector("form"),this.todoInput=document.querySelector(".todoInput"),this.todoContainer=document.querySelector(".todo--section"),this.allBtn=document.querySelector(".all"),this.activeBtn=document.querySelector(".active"),this.completedBtn=document.querySelector(".completed"),this.navBtns=document.querySelectorAll(".nav"),this.bgToggle=document.querySelector(".bgToggle"),this.body=document.querySelector("body"),this.form.addEventListener("submit",this._addTodoItem.bind(this)),this.todoContainer.addEventListener("click",this._toggleMenuBtns.bind(this)),this.todoContainer.addEventListener("click",this._markCompleted.bind(this)),this.todoContainer.addEventListener("click",this._deleteTodo.bind(this)),this.allBtn.addEventListener("click",this._showAllTodoItems.bind(this)),this.activeBtn.addEventListener("click",this._showActiveTodoItems.bind(this)),this.completedBtn.addEventListener("click",this._showCompletedTodoItems.bind(this)),this.navBtns.forEach((e=>e.addEventListener("click",this._toggleActiveNav.bind(this)))),this.bgToggle.addEventListener("click",this._toggleBackgroundColor.bind(this)),this._renderTodoItem("all")}};
//# sourceMappingURL=index.25173afa.js.map
