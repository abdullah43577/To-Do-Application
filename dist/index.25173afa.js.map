{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_update.mjs","node_modules/@swc/helpers/src/_class_private_field_update.mjs","src/app/script.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorUpdate(receiver, descriptor) {\n    if (descriptor.set) {\n        if (!descriptor.get) {\n            throw new TypeError(\"attempted to read set only private field\");\n        }\n        if (!(\"__destrWrapper\" in descriptor)) {\n            descriptor.__destrWrapper = {\n                set value(v) {\n                    descriptor.set.call(receiver, v);\n                },\n                get value() {\n                    return descriptor.get.call(receiver);\n                },\n            };\n        }\n        return descriptor.__destrWrapper;\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        return descriptor;\n    }\n}\n","import classExtractFieldDescriptor from \"./_class_extract_field_descriptor.mjs\";\nimport classApplyDescriptorUpdate from \"./_class_apply_descriptor_update.mjs\";\n\nexport default function _classPrivateFieldUpdate(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"update\");\n    return classApplyDescriptorUpdate(receiver, descriptor);\n}\n","// Todo1: Users must be able to create todo list items ✅\r\n// Todo2: Users must be able to mark todo as completed ✅\r\n// Todo3: users must be able to edit todo list items ✅\r\n// Todo4: users must be able to delete todo list items ✅\r\n// Todo5: users must be able to toggle between the (All, Active and Complete Tabs) ✅\r\n// Todo6: users must be able to reorder list items\r\n// Todo7: users must be able to toggle background colors\r\n// Todo8: Todo list items must persist in localStorage ✅\r\n// Todo9: implement the use of dates/time\r\n// Todo9: users must be able to sort\r\n// Todo10: implement a guide showing how to use the todo list app\r\n\r\nclass Todo {\r\n  // representing the All array in this case.\r\n  #todoLists = JSON.parse(localStorage.getItem(\"Todos\")) || [];\r\n  #index = parseInt(localStorage.getItem(\"TodosIndex\")) || 0;\r\n  #currentState;\r\n  constructor() {\r\n    this.form = document.querySelector(\"form\");\r\n    this.todoInput = document.querySelector(\".todoInput\");\r\n    this.todoContainer = document.querySelector(\".todo--section\");\r\n    this.allBtn = document.querySelector(\".all\");\r\n    this.activeBtn = document.querySelector(\".active\");\r\n    this.completedBtn = document.querySelector(\".completed\");\r\n    this.navBtns = document.querySelectorAll(\".nav\");\r\n    this.bgToggle = document.querySelector(\".bgToggle\");\r\n    this.body = document.querySelector(\"body\");\r\n\r\n    this.form.addEventListener(\"submit\", this._addTodoItem.bind(this));\r\n    this.todoContainer.addEventListener(\r\n      \"click\",\r\n      this._toggleMenuBtns.bind(this)\r\n    );\r\n    this.todoContainer.addEventListener(\r\n      \"click\",\r\n      this._markCompleted.bind(this)\r\n    );\r\n    this.todoContainer.addEventListener(\"click\", this._deleteTodo.bind(this));\r\n    this.allBtn.addEventListener(\"click\", this._showAllTodoItems.bind(this));\r\n    this.activeBtn.addEventListener(\r\n      \"click\",\r\n      this._showActiveTodoItems.bind(this)\r\n    );\r\n    this.completedBtn.addEventListener(\r\n      \"click\",\r\n      this._showCompletedTodoItems.bind(this)\r\n    );\r\n    this.navBtns.forEach((nav) =>\r\n      nav.addEventListener(\"click\", this._toggleActiveNav.bind(this))\r\n    );\r\n    this.bgToggle.addEventListener(\r\n      \"click\",\r\n      this._toggleBackgroundColor.bind(this)\r\n    );\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n\r\n  _toggleBackgroundColor() {\r\n    this.body.classList.toggle(\"dark\");\r\n\r\n    if (this.body.classList.contains(\"dark\")) {\r\n      console.log(this.bgToggle.src);\r\n      this.bgToggle.src = \"./images/icon-sun.svg\";\r\n      console.log(this.bgToggle.src);\r\n      this.bgToggle.alt = \"icon sun\";\r\n    } else {\r\n      this.bgToggle.src = \"./images/icon-moon.svg\";\r\n      this.bgToggle.alt = \"icon moon\";\r\n    }\r\n  }\r\n\r\n  _removePreviousActiveNav() {\r\n    document.querySelectorAll(\".nav\").forEach((navBtn) => {\r\n      if (navBtn.classList.contains(\"nav-active\")) {\r\n        navBtn.classList.remove(\"nav-active\");\r\n      }\r\n    });\r\n  }\r\n\r\n  _toggleActiveNav(e) {\r\n    this._removePreviousActiveNav();\r\n    e.target.classList.add(\"nav-active\");\r\n  }\r\n\r\n  _showAllTodoItems() {\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n\r\n  _showActiveTodoItems() {\r\n    this._renderTodoItem(\"active\");\r\n  }\r\n\r\n  _showCompletedTodoItems() {\r\n    this._renderTodoItem(\"completed\");\r\n  }\r\n\r\n  _deleteTodo(e) {\r\n    let delBtn = e.target.closest(\".delete-container\");\r\n    if (!delBtn) return;\r\n\r\n    let todoIndex = this.#todoLists.findIndex(\r\n      (todo) => todo.id === parseInt(delBtn.id)\r\n    );\r\n\r\n    this.#todoLists.splice(todoIndex, 1);\r\n    localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n\r\n  _markCompleted(e) {\r\n    let input = e.target.closest('input[type=\"checkbox\"]');\r\n    if (!input) return;\r\n\r\n    // let container = input.parentElement.parentElement;\r\n\r\n    input.nextElementSibling.classList.toggle(\"checked\");\r\n    let todoIndex = this.#todoLists.findIndex(\r\n      (todo) => todo.id === parseInt(input.id)\r\n    );\r\n    if (input.checked) {\r\n      this.#todoLists[todoIndex].isCompleted = true;\r\n      this.#todoLists[todoIndex].isActive = false;\r\n    } else {\r\n      this.#todoLists[todoIndex].isCompleted = false;\r\n      this.#todoLists[todoIndex].isActive = true;\r\n    }\r\n    localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n  }\r\n\r\n  _toggleMenuBtns(e) {\r\n    let elipsis = e.target.closest(\".fa-ellipsis\");\r\n    if (!elipsis) return;\r\n\r\n    // toggle the edit and delete button container\r\n    elipsis.nextElementSibling.classList.toggle(\"hidden\");\r\n    elipsis.nextElementSibling.classList.toggle(\"flex\");\r\n\r\n    setTimeout(() => {\r\n      elipsis.nextElementSibling.style.opacity =\r\n        elipsis.nextElementSibling.classList.contains(\"hidden\") ? 0 : 1;\r\n    }, 10);\r\n\r\n    // accessing the edit container element\r\n    let editContainer = elipsis.nextElementSibling.firstElementChild;\r\n    // accessing the todo paragraph element\r\n    let element =\r\n      editContainer.parentElement.parentElement.firstElementChild\r\n        .lastElementChild;\r\n\r\n    editContainer.addEventListener(\"click\", () => {\r\n      this.todoInput.value = element.textContent.trim();\r\n      this.todoInput.focus();\r\n\r\n      elipsis.nextElementSibling.classList.add(\"hidden\");\r\n\r\n      this.#todoLists.forEach((todo) => {\r\n        if (todo.isEditing) todo.isEditing = false;\r\n      });\r\n\r\n      let todoIndex = this.#todoLists.findIndex(\r\n        (todo) => todo.id === parseInt(editContainer.id)\r\n      );\r\n      this.#todoLists[todoIndex].isEditing = true;\r\n      localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n    });\r\n  }\r\n\r\n  _renderTodoItem(filter) {\r\n    let filteredTodos = [];\r\n    let html = \"\";\r\n\r\n    if (this.#todoLists) {\r\n      switch (filter) {\r\n        case \"all\":\r\n          filteredTodos = this.#todoLists;\r\n          break;\r\n        case \"active\":\r\n          filteredTodos = this.#todoLists.filter((todo) => todo.isActive);\r\n          break;\r\n        case \"completed\":\r\n          filteredTodos = this.#todoLists.filter((todo) => todo.isCompleted);\r\n          break;\r\n        default:\r\n          filteredTodos = this.#todoLists;\r\n      }\r\n    }\r\n\r\n    filteredTodos.forEach((todo) => {\r\n      html += `\r\n        <div class=\"todo--container relative flex cursor-pointer items-center justify-between border-b border-veryDarkGrayishBlue bg-veryLightGray px-5 py-4 dark:border-veryLightGrayishBlue dark:bg-veryDarkDesaturatedBlue\" draggable=\"true\">\r\n          <div class=\"todo-content flex items-center\">\r\n            <input type=\"checkbox\" class=\"mr-3 cursor-pointer\" id=\"${todo.id}\"/>\r\n            <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">${todo.todo}</p>\r\n          </div>\r\n\r\n          <i class=\"fa-solid fa-ellipsis fa-lg cursor-pointer text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n\r\n            <div class=\"editdel-container absolute right-0 top-8 hidden h-[80px] w-[100px] flex-col justify-center gap-[0.5rem] rounded-lg bg-veryLightGray px-2 z-10 dark:bg-veryDarkGrayishBlue opacity-0\">\r\n                <div class=\"edit-container flex cursor-pointer items-center justify-around\" id=\"${todo.id}\">\r\n                  <i class=\"fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Edit</p>\r\n                </div>\r\n\r\n                <div class=\"delete-container flex w-full cursor-pointer items-center justify-around border-t border-veryDarkGrayishBlue pt-2\" id=\"${todo.id}\">\r\n                  <i class=\"fa-solid fa-trash text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Delete</p>\r\n                </div>\r\n              </div>\r\n        </div>`;\r\n    });\r\n    this.todoContainer.innerHTML =\r\n      html ||\r\n      `<div class=\"relative flex cursor-pointer items-center justify-between bg-veryLightGray px-5 py-4 dark:bg-veryDarkDesaturatedBlue text-veryDarkGrayishBlue dark:text-lightGrayishBlue text-sm\">There are no todos at this time!</div>`;\r\n\r\n    // loop through todos and add \"checked\" class if isCompleted is true\r\n    this.#todoLists.forEach((todo) => {\r\n      if (todo.isCompleted) {\r\n        const todoItem = document.getElementById(todo.id);\r\n        if (todoItem) {\r\n          todoItem.nextElementSibling.classList.add(\"checked\");\r\n          todoItem.checked = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _addTodoItem(e) {\r\n    e.preventDefault();\r\n\r\n    let storage;\r\n    this.#currentState = this.#todoLists.some(\r\n      (todoItem) => todoItem.isEditing === true\r\n    );\r\n\r\n    // if there's an input\r\n    if (this.todoInput.value) {\r\n      // if there's there is no isEditing value of any property set to true\r\n      if (!this.#currentState) {\r\n        ++this.#index;\r\n        localStorage.setItem(\"TodosIndex\", this.#index);\r\n\r\n        storage = {\r\n          id: this.#index,\r\n          todo: this.todoInput.value.trim(),\r\n          isActive: true,\r\n          isCompleted: false,\r\n          isEditing: false,\r\n        };\r\n\r\n        this.#todoLists.push(storage);\r\n      } else {\r\n        let editedIndex = this.#todoLists.findIndex(\r\n          (todoItem) => todoItem.isEditing\r\n        );\r\n        this.#todoLists[editedIndex].todo = this.todoInput.value;\r\n        this.#todoLists[editedIndex].isEditing = false;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n    this.todoInput.value = \"\";\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n}\r\n\r\nconst todo = new Todo();\r\n"],"names":["$63a2a9cb56255ced$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$91f06d233fb295cb$export$2e2bcd8739ae039","descriptor","call","value","$cfafd7bd727718cb$export$2e2bcd8739ae039","$3b30310a11d769ec$export$2e2bcd8739ae039","obj","privateCollection","$a33675d45e16a910$export$2e2bcd8739ae039","set","$613067712a285d8d$export$2e2bcd8739ae039","writable","$97039f73d3457507$export$2e2bcd8739ae039","$9bd79d1c60c99532$export$2e2bcd8739ae039","__destrWrapper","v","$178a5e9aee1d5ea4$export$2e2bcd8739ae039","$12c51030c18c1e33$var$_todoLists","WeakMap","$12c51030c18c1e33$var$_index","$12c51030c18c1e33$var$_currentState","_toggleBackgroundColor","this","body","classList","toggle","contains","console","log","bgToggle","src","alt","_removePreviousActiveNav","document","querySelectorAll","forEach","navBtn","remove","_toggleActiveNav","e","target","add","_showAllTodoItems","_renderTodoItem","_showActiveTodoItems","_showCompletedTodoItems","_deleteTodo","delBtn","closest","todoIndex","findIndex","todo","id","parseInt","splice","localStorage","setItem","JSON","stringify","_markCompleted","input","nextElementSibling","checked","isCompleted","isActive","_toggleMenuBtns","elipsis","setTimeout","style","opacity","editContainer","firstElementChild","element","parentElement","lastElementChild","addEventListener","todoInput","textContent","trim","focus","isEditing","filter","filteredTodos","html","todoContainer","innerHTML","todoItem","getElementById","_addTodoItem","storage","preventDefault","some","editedIndex","push","constructor","parse","getItem","form","querySelector","allBtn","activeBtn","completedBtn","navBtns","bind","nav"],"version":3,"file":"index.25173afa.js.map"}