{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_update.mjs","node_modules/@swc/helpers/src/_class_private_field_update.mjs","src/app/script.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorUpdate(receiver, descriptor) {\n    if (descriptor.set) {\n        if (!descriptor.get) {\n            throw new TypeError(\"attempted to read set only private field\");\n        }\n        if (!(\"__destrWrapper\" in descriptor)) {\n            descriptor.__destrWrapper = {\n                set value(v) {\n                    descriptor.set.call(receiver, v);\n                },\n                get value() {\n                    return descriptor.get.call(receiver);\n                },\n            };\n        }\n        return descriptor.__destrWrapper;\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        return descriptor;\n    }\n}\n","import classExtractFieldDescriptor from \"./_class_extract_field_descriptor.mjs\";\nimport classApplyDescriptorUpdate from \"./_class_apply_descriptor_update.mjs\";\n\nexport default function _classPrivateFieldUpdate(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"update\");\n    return classApplyDescriptorUpdate(receiver, descriptor);\n}\n","// Todo1: Users must be able to create todo list items ✅\r\n// Todo2: Users must be able to mark todo as completed ✅\r\n// Todo3: users must be able to edit todo list items ✅\r\n// Todo4: users must be able to delete todo list items ✅\r\n// Todo5: users must be able to toggle between the (All, Active and Complete Tabs) ✅\r\n// Todo6: users must be able to reorder list items\r\n// Todo7: users must be able to toggle background colors\r\n// Todo8: Todo list items must persist in localStorage ✅\r\n\r\nclass Todo {\r\n  // representing the All array in this case.\r\n  #todoLists = JSON.parse(localStorage.getItem(\"Todos\")) || [];\r\n  #index = parseInt(localStorage.getItem(\"TodosIndex\")) || 0;\r\n  constructor() {\r\n    this.form = document.querySelector(\"form\");\r\n    this.todoInput = document.querySelector(\".todoInput\");\r\n    this.todoContainer = document.querySelector(\".todo--section\");\r\n    this.allBtn = document.querySelector(\".all\");\r\n    this.activeBtn = document.querySelector(\".active\");\r\n    this.completedBtn = document.querySelector(\".completed\");\r\n\r\n    this.form.addEventListener(\"submit\", this._addTodoItem.bind(this));\r\n    this.todoContainer.addEventListener(\r\n      \"click\",\r\n      this._toggleMenuBtns.bind(this)\r\n    );\r\n    this.todoContainer.addEventListener(\r\n      \"click\",\r\n      this._markCompleted.bind(this)\r\n    );\r\n    this.todoContainer.addEventListener(\"click\", this._deleteTodo.bind(this));\r\n    this.allBtn.addEventListener(\"click\", this._showAllTodoItems.bind(this));\r\n    this.activeBtn.addEventListener(\r\n      \"click\",\r\n      this._showActiveTodoItems.bind(this)\r\n    );\r\n    this.completedBtn.addEventListener(\r\n      \"click\",\r\n      this._showCompletedTodoItems.bind(this)\r\n    );\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n\r\n  _showAllTodoItems() {\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n\r\n  _showActiveTodoItems() {\r\n    this._renderTodoItem(\"active\");\r\n  }\r\n\r\n  _showCompletedTodoItems() {\r\n    this._renderTodoItem(\"completed\");\r\n  }\r\n\r\n  _deleteTodo(e) {\r\n    let delBtn = e.target.closest(\".delete-container\");\r\n    if (!delBtn) return;\r\n\r\n    let index = this.#todoLists.indexOf(\r\n      this.#todoLists[parseInt(delBtn.id) - 1]\r\n    );\r\n\r\n    this.#todoLists.splice(index, 1);\r\n    localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n    this._renderTodoItem(\"all\");\r\n  }\r\n\r\n  _markCompleted(e) {\r\n    let input = e.target.closest('input[type=\"checkbox\"]');\r\n    if (!input) return;\r\n\r\n    input.nextElementSibling.classList.toggle(\"checked\");\r\n    let todoIndex = this.#todoLists.findIndex(\r\n      (todo) => todo.id === parseInt(input.id)\r\n    );\r\n    if (input.checked) {\r\n      this.#todoLists[todoIndex].isCompleted = true;\r\n      this.#todoLists[todoIndex].isActive = false;\r\n    } else {\r\n      this.#todoLists[todoIndex].isCompleted = false;\r\n      this.#todoLists[todoIndex].isActive = true;\r\n    }\r\n    localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n  }\r\n\r\n  _toggleMenuBtns(e) {\r\n    let elipsis = e.target.closest(\".fa-ellipsis\");\r\n    if (!elipsis) return;\r\n\r\n    // toggle the edit and delete button container\r\n    elipsis.nextElementSibling.classList.toggle(\"hidden\");\r\n    elipsis.nextElementSibling.classList.toggle(\"flex\");\r\n\r\n    // accessing the edit container element\r\n    let editContainer = elipsis.nextElementSibling.firstElementChild;\r\n    // accessing the todo paragraph element\r\n    let element =\r\n      editContainer.parentElement.parentElement.firstElementChild\r\n        .lastElementChild;\r\n\r\n    let submitContainer = editContainer.nextElementSibling;\r\n\r\n    // Todo: check this out tomrorrow to see why it isn't working, you should remove it to prevent users from pressing enter, and then add it later after the submit button has been clicked\r\n    // this.form.removeEventListener(\"submit\", this._addTodoItem.bind(this));\r\n\r\n    editContainer.addEventListener(\"click\", () => {\r\n      this.todoInput.value = element.textContent.trim();\r\n\r\n      editContainer.classList.add(\"hidden\");\r\n      submitContainer.classList.remove(\"hidden\");\r\n      submitContainer.classList.add(\"flex\");\r\n    });\r\n\r\n    submitContainer.addEventListener(\"click\", () => {\r\n      element.textContent = this.todoInput.value;\r\n\r\n      editContainer.classList.remove(\"hidden\");\r\n      submitContainer.classList.add(\"hidden\");\r\n      submitContainer.classList.remove(\"flex\");\r\n\r\n      let todoIndex = this.#todoLists.findIndex(\r\n        (todo) => todo.id === parseInt(submitContainer.id)\r\n      );\r\n\r\n      this.todoInput.value = \"\";\r\n\r\n      this.#todoLists[todoIndex].todo = element.textContent;\r\n\r\n      localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n    });\r\n  }\r\n\r\n  _renderTodoItem(filter) {\r\n    let filteredTodos = [];\r\n    let html = \"\";\r\n\r\n    if (this.#todoLists) {\r\n      switch (filter) {\r\n        case \"all\":\r\n          filteredTodos = this.#todoLists;\r\n          break;\r\n        case \"active\":\r\n          filteredTodos = this.#todoLists.filter((todo) => todo.isActive);\r\n          break;\r\n        case \"completed\":\r\n          filteredTodos = this.#todoLists.filter((todo) => todo.isCompleted);\r\n          break;\r\n        default:\r\n          filteredTodos = this.#todoLists;\r\n      }\r\n    }\r\n\r\n    filteredTodos.forEach((todo) => {\r\n      html += `\r\n        <div class=\"todo--container relative flex cursor-pointer items-center justify-between border-b border-veryDarkGrayishBlue bg-veryLightGray px-5 py-4 dark:border-veryLightGrayishBlue dark:bg-veryDarkDesaturatedBlue\" draggable=\"true\">\r\n          <div class=\"todo-content flex items-center\">\r\n            <input type=\"checkbox\" class=\"mr-3 cursor-pointer\" id=\"${todo.id}\"/>\r\n            <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">${todo.todo}</p>\r\n          </div>\r\n\r\n          <i class=\"fa-solid fa-ellipsis fa-lg cursor-pointer text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n\r\n            <div class=\"editdel-container absolute right-0 top-8 hidden h-[80px] w-[100px] flex-col justify-center gap-[0.5rem] rounded-lg bg-veryLightGray px-2 z-10 dark:bg-veryDarkGrayishBlue\">\r\n                <div class=\"edit-container flex cursor-pointer items-center justify-around\">\r\n                  <i class=\"fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Edit</p>\r\n                </div>\r\n                \r\n                <div class=\"submit-container cursor-pointer items-center justify-around hidden\" id=\"${todo.id}\">\r\n                  <i class=\"fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Submit</p>\r\n                </div>\r\n\r\n                <div class=\"delete-container flex w-full cursor-pointer items-center justify-around border-t border-veryDarkGrayishBlue pt-2\" id=\"${todo.id}\">\r\n                  <i class=\"fa-solid fa-trash text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Delete</p>\r\n                </div>\r\n              </div>\r\n        </div>`;\r\n    });\r\n    this.todoContainer.innerHTML =\r\n      html ||\r\n      `<div class=\"relative flex cursor-pointer items-center justify-between bg-veryLightGray px-5 py-4 dark:bg-veryDarkDesaturatedBlue text-veryDarkGrayishBlue dark:text-lightGrayishBlue text-sm\">There are no todos at this time!</div>`;\r\n\r\n    // loop through todos and add \"checked\" class if isCompleted is true\r\n    this.#todoLists.forEach((todo) => {\r\n      if (todo.isCompleted) {\r\n        const todoItem = document.getElementById(todo.id);\r\n        if (todoItem) {\r\n          todoItem.nextElementSibling.classList.add(\"checked\");\r\n          todoItem.checked = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _addTodoItem(e) {\r\n    e.preventDefault();\r\n\r\n    if (this.todoInput.value) {\r\n      ++this.#index;\r\n      localStorage.setItem(\"TodosIndex\", this.#index);\r\n\r\n      let storage = {\r\n        id: this.#index,\r\n        todo: this.todoInput.value.trim(),\r\n        isActive: true,\r\n        isCompleted: false,\r\n      };\r\n\r\n      this.#todoLists.push(storage);\r\n      localStorage.setItem(\"Todos\", JSON.stringify(this.#todoLists));\r\n\r\n      this.todoInput.value = \"\";\r\n      this._renderTodoItem(\"all\");\r\n    }\r\n  }\r\n}\r\n\r\nconst todo = new Todo();\r\n"],"names":["$63a2a9cb56255ced$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$91f06d233fb295cb$export$2e2bcd8739ae039","descriptor","call","value","$cfafd7bd727718cb$export$2e2bcd8739ae039","$3b30310a11d769ec$export$2e2bcd8739ae039","obj","privateCollection","$a33675d45e16a910$export$2e2bcd8739ae039","set","$9bd79d1c60c99532$export$2e2bcd8739ae039","__destrWrapper","v","writable","$178a5e9aee1d5ea4$export$2e2bcd8739ae039","$12c51030c18c1e33$var$_todoLists","WeakMap","$12c51030c18c1e33$var$_index","_showAllTodoItems","this","_renderTodoItem","_showActiveTodoItems","_showCompletedTodoItems","_deleteTodo","e","delBtn","target","closest","index","indexOf","parseInt","id","splice","localStorage","setItem","JSON","stringify","_markCompleted","input","nextElementSibling","classList","toggle","todoIndex","findIndex","todo","checked","isCompleted","isActive","_toggleMenuBtns","elipsis","editContainer","firstElementChild","element","parentElement","lastElementChild","submitContainer","addEventListener","todoInput","textContent","trim","add","remove","filter","filteredTodos","html","forEach","todoContainer","innerHTML","todoItem","document","getElementById","_addTodoItem","preventDefault","storage","push","constructor","parse","getItem","form","querySelector","allBtn","activeBtn","completedBtn","bind"],"version":3,"file":"index.6ae1020a.js.map"}