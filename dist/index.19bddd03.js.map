{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_private_field_set.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_update.mjs","node_modules/@swc/helpers/src/_class_private_field_update.mjs","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-54ebd90d635fc4ac.js","node_modules/@parcel/runtime-js/lib/runtime-caffb81410299c3e.js","node_modules/@parcel/runtime-js/lib/runtime-4de3d7932c7b739b.js","src/app/script.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _classApplyDescriptorUpdate(receiver, descriptor) {\n    if (descriptor.set) {\n        if (!descriptor.get) {\n            throw new TypeError(\"attempted to read set only private field\");\n        }\n        if (!(\"__destrWrapper\" in descriptor)) {\n            descriptor.__destrWrapper = {\n                set value(v) {\n                    descriptor.set.call(receiver, v);\n                },\n                get value() {\n                    return descriptor.get.call(receiver);\n                },\n            };\n        }\n        return descriptor.__destrWrapper;\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        return descriptor;\n    }\n}\n","import classExtractFieldDescriptor from \"./_class_extract_field_descriptor.mjs\";\nimport classApplyDescriptorUpdate from \"./_class_apply_descriptor_update.mjs\";\n\nexport default function _classPrivateFieldUpdate(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"update\");\n    return classApplyDescriptorUpdate(receiver, descriptor);\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cnvi0\\\":\\\"index.19bddd03.js\\\",\\\"hPo1j\\\":\\\"icon-sun.44d61571.svg\\\",\\\"jqsmB\\\":\\\"icon-moon.3850093d.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hPo1j\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jqsmB\")).toString();","import sunIcon from '../images/icon-sun.svg';\r\nimport moonIcon from '../images/icon-moon.svg';\r\n\r\nclass Todo {\r\n  // representing the All array in this case.\r\n  #todoLists = JSON.parse(localStorage.getItem('Todos')) || [];\r\n  // unique id for each rendered todo\r\n  #index = parseInt(localStorage.getItem('TodosIndex')) || 0;\r\n  #currentState;\r\n  constructor() {\r\n    this.form = document.querySelector('form');\r\n    this.todoInput = document.querySelector('.todoInput');\r\n    this.todoContainer = document.querySelector('.todo--section');\r\n    this.allBtn = document.querySelector('.all');\r\n    this.activeBtn = document.querySelector('.active');\r\n    this.completedBtn = document.querySelector('.completed');\r\n    this.navBtns = document.querySelectorAll('.nav');\r\n    this.bgToggle = document.querySelector('.bgToggle');\r\n    this.body = document.querySelector('body');\r\n    this.itemsCounter = document.querySelector('.itemsCounter');\r\n    this.clearCompleted = document.querySelector('.clearCompleted');\r\n\r\n    this.form.addEventListener('submit', this._addTodoItem.bind(this));\r\n    this.todoContainer.addEventListener('click', this._toggleMenuBtns.bind(this));\r\n    this.todoContainer.addEventListener('click', this._markCompleted.bind(this));\r\n    this.todoContainer.addEventListener('click', this._markCompletedCheck.bind(this));\r\n    this.todoContainer.addEventListener('click', this._deleteTodo.bind(this));\r\n    this.todoContainer.addEventListener('dragstart', this._dragndrop.bind(this));\r\n    this.todoContainer.addEventListener('dragend', this._dragndrop2.bind(this));\r\n    this.todoContainer.addEventListener('dragover', this._dragndrop3.bind(this));\r\n    this.allBtn.addEventListener('click', this._showAllTodoItems.bind(this));\r\n    this.activeBtn.addEventListener('click', this._showActiveTodoItems.bind(this));\r\n    this.completedBtn.addEventListener('click', this._showCompletedTodoItems.bind(this));\r\n    this.navBtns.forEach((nav) => nav.addEventListener('click', this._toggleActiveNav.bind(this)));\r\n    this.bgToggle.addEventListener('click', this._toggleBackgroundColor.bind(this));\r\n    this.clearCompleted.addEventListener('click', this._clearCompletedTodo.bind(this));\r\n\r\n    this._renderTodoItem('all');\r\n    this._countTodo();\r\n  }\r\n\r\n  _clearCompletedTodo() {\r\n    this.#todoLists = this.#todoLists.filter((allTodo) => !allTodo.isCompleted);\r\n    localStorage.setItem('Todos', JSON.stringify(this.#todoLists));\r\n    this._renderTodoItem('all');\r\n    this._countTodo();\r\n  }\r\n\r\n  _countTodo() {\r\n    this.itemsCounter.textContent = this.#todoLists.length ? `${this.#todoLists.length} items remaining` : \"You haven't added any todo\";\r\n  }\r\n\r\n  _dragndrop3(e) {\r\n    e.preventDefault();\r\n    const draggingItem = this.todoContainer.querySelector('.dragging');\r\n    const siblings = [...this.todoContainer.querySelectorAll('.todo--container:not(.dragging)')];\r\n    let nextSibling = siblings.find((sibling) => e.clientY <= sibling.offsetTop + sibling.offsetHeight / 2);\r\n\r\n    this.todoContainer.insertBefore(draggingItem, nextSibling);\r\n  }\r\n\r\n  _dragndrop2(e) {\r\n    let container = e.target.closest('.todo--container');\r\n    if (!container) return;\r\n\r\n    container.classList.remove('dragging');\r\n  }\r\n\r\n  _dragndrop(e) {\r\n    let container = e.target.closest('.todo--container');\r\n    if (!container) return;\r\n\r\n    setTimeout(() => container.classList.add('dragging'), 0);\r\n  }\r\n\r\n  _toggleBackgroundColor() {\r\n    this.body.classList.toggle('dark');\r\n\r\n    if (this.body.classList.contains('dark')) {\r\n      this.bgToggle.src = sunIcon;\r\n      this.bgToggle.alt = 'icon sun';\r\n    } else {\r\n      this.bgToggle.src = moonIcon;\r\n      this.bgToggle.alt = 'icon moon';\r\n    }\r\n  }\r\n\r\n  _removePreviousActiveNav() {\r\n    document.querySelectorAll('.nav').forEach((navBtn) => {\r\n      if (navBtn.classList.contains('nav-active')) {\r\n        navBtn.classList.remove('nav-active');\r\n      }\r\n    });\r\n  }\r\n\r\n  _toggleActiveNav(e) {\r\n    this._removePreviousActiveNav();\r\n    e.target.classList.add('nav-active');\r\n  }\r\n\r\n  _showAllTodoItems() {\r\n    this._renderTodoItem('all');\r\n  }\r\n\r\n  _showActiveTodoItems() {\r\n    this._renderTodoItem('active');\r\n  }\r\n\r\n  _showCompletedTodoItems() {\r\n    this._renderTodoItem('completed');\r\n  }\r\n\r\n  _deleteTodo(e) {\r\n    let delBtn = e.target.closest('.delete-container');\r\n    if (!delBtn) return;\r\n\r\n    let todoIndex = this.#todoLists.findIndex((todo) => todo.id === parseInt(delBtn.id));\r\n\r\n    this.#todoLists.splice(todoIndex, 1);\r\n    localStorage.setItem('Todos', JSON.stringify(this.#todoLists));\r\n    this._renderTodoItem('all');\r\n    this._countTodo();\r\n  }\r\n\r\n  _markCompletedCheck(e) {\r\n    let input = e.target.closest('input[type=\"checkbox\"]');\r\n    if (!input) return;\r\n\r\n    input.nextElementSibling.classList.toggle('checked');\r\n    let todoIndex = this.#todoLists.findIndex((todo) => todo.id === parseInt(input.id));\r\n    if (input.checked) {\r\n      this.#todoLists[todoIndex].isCompleted = true;\r\n      this.#todoLists[todoIndex].isActive = false;\r\n    } else {\r\n      this.#todoLists[todoIndex].isCompleted = false;\r\n      this.#todoLists[todoIndex].isActive = true;\r\n    }\r\n    localStorage.setItem('Todos', JSON.stringify(this.#todoLists));\r\n  }\r\n\r\n  _markCompleted(e) {\r\n    let container = e.target.closest('.todo--container');\r\n    if (!container) return;\r\n\r\n    let input = container.querySelector('input[type=\"checkbox\"]');\r\n\r\n    if (e.target.closest('.exclude-me') || e.target.closest('.editdel-container')) return;\r\n\r\n    input.checked ? (input.checked = false) : (input.checked = true);\r\n\r\n    container.firstElementChild.lastElementChild.classList.toggle('checked');\r\n    let todoIndex = this.#todoLists.findIndex((todo) => todo.id === parseInt(input.id));\r\n    if (input.checked) {\r\n      this.#todoLists[todoIndex].isCompleted = true;\r\n      this.#todoLists[todoIndex].isActive = false;\r\n    } else {\r\n      this.#todoLists[todoIndex].isCompleted = false;\r\n      this.#todoLists[todoIndex].isActive = true;\r\n    }\r\n    localStorage.setItem('Todos', JSON.stringify(this.#todoLists));\r\n  }\r\n\r\n  _toggleMenuBtns(e) {\r\n    let elipsis = e.target.closest('.fa-ellipsis');\r\n    if (!elipsis) return;\r\n\r\n    // toggle the edit and delete button container\r\n    elipsis.nextElementSibling.classList.toggle('hidden');\r\n    elipsis.nextElementSibling.classList.toggle('flex');\r\n\r\n    setTimeout(() => {\r\n      elipsis.nextElementSibling.style.opacity = elipsis.nextElementSibling.classList.contains('hidden') ? 0 : 1;\r\n    }, 10);\r\n\r\n    // accessing the edit container element\r\n    let editContainer = elipsis.nextElementSibling.firstElementChild;\r\n    // accessing the todo paragraph element\r\n    let element = editContainer.parentElement.parentElement.firstElementChild.lastElementChild;\r\n\r\n    editContainer.addEventListener('click', () => {\r\n      this.todoInput.value = element.textContent.trim();\r\n      this.todoInput.focus();\r\n\r\n      elipsis.nextElementSibling.classList.add('hidden');\r\n      elipsis.nextElementSibling.classList.remove('flex');\r\n\r\n      this.#todoLists.forEach((todo) => {\r\n        if (todo.isEditing) todo.isEditing = false;\r\n      });\r\n\r\n      let todoIndex = this.#todoLists.findIndex((todo) => todo.id === parseInt(editContainer.id));\r\n      this.#todoLists[todoIndex].isEditing = true;\r\n      localStorage.setItem('Todos', JSON.stringify(this.#todoLists));\r\n    });\r\n  }\r\n\r\n  _renderTodoItem(filter) {\r\n    let filteredTodos = [];\r\n    let html = '';\r\n\r\n    if (this.#todoLists) {\r\n      switch (filter) {\r\n        case 'all':\r\n          filteredTodos = this.#todoLists;\r\n          break;\r\n        case 'active':\r\n          filteredTodos = this.#todoLists.filter((todo) => todo.isActive);\r\n          break;\r\n        case 'completed':\r\n          filteredTodos = this.#todoLists.filter((todo) => todo.isCompleted);\r\n          break;\r\n        default:\r\n          filteredTodos = this.#todoLists;\r\n      }\r\n    }\r\n\r\n    filteredTodos.forEach((todo) => {\r\n      html += `\r\n        <div class=\"todo--container relative flex cursor-pointer items-center justify-between border-b border-veryDarkGrayishBlue bg-veryLightGray px-5 py-4 dark:border-veryLightGrayishBlue dark:bg-veryDarkDesaturatedBlue\" draggable=\"true\">\r\n          <div class=\"todo-content flex items-center\">\r\n            <input type=\"checkbox\" class=\"mr-3 exclude-me cursor-pointer\" id=\"${todo.id}\"/>\r\n            <p class=\"text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">${todo.todo}</p>\r\n          </div>\r\n\r\n          <i class=\"fa-solid exclude-me fa-ellipsis fa-lg cursor-pointer text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n\r\n            <div class=\"editdel-container absolute right-0 top-8 hidden h-[80px] w-[100px] flex-col justify-center gap-[0.5rem] rounded-lg bg-veryLightGray px-2 z-10 dark:bg-veryDarkGrayishBlue opacity-0\">\r\n                <div class=\"exclude-me edit-container flex cursor-pointer items-center justify-around\" id=\"${todo.id}\">\r\n                  <i class=\"exclude-me fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"exclude-me text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Edit</p>\r\n                </div>\r\n\r\n                <div class=\"exclude-me delete-container flex w-full cursor-pointer items-center justify-around border-t border-veryDarkGrayishBlue pt-2\" id=\"${todo.id}\">\r\n                  <i class=\"exclude-me fa-solid fa-trash text-veryDarkGrayishBlue dark:text-lightGrayishBlue\"></i>\r\n                  <p class=\"exclude-me text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue\">Delete</p>\r\n                </div>\r\n              </div>\r\n        </div>`;\r\n    });\r\n    this.todoContainer.innerHTML =\r\n      html || `<div class=\"relative flex cursor-pointer items-center justify-between bg-veryLightGray px-5 py-4 dark:bg-veryDarkDesaturatedBlue text-veryDarkGrayishBlue dark:text-lightGrayishBlue text-sm\">There are no todos at this time!</div>`;\r\n\r\n    // loop through todos and add \"checked\" class if isCompleted is true\r\n    this.#todoLists.forEach((todo) => {\r\n      if (todo.isCompleted) {\r\n        const todoItem = document.getElementById(todo.id);\r\n        if (todoItem) {\r\n          todoItem.nextElementSibling.classList.add('checked');\r\n          todoItem.checked = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _addTodoItem(e) {\r\n    e.preventDefault();\r\n\r\n    // checks if all the isEditing property is false (returns true and false otherwise)\r\n    this.#currentState = this.#todoLists.every((todoItem) => !todoItem.isEditing);\r\n\r\n    if (this.todoInput.value) {\r\n      if (this.#currentState) {\r\n        ++this.#index;\r\n        localStorage.setItem('TodosIndex', this.#index);\r\n\r\n        let storage = {\r\n          id: this.#index,\r\n          todo: this.todoInput.value.trim(),\r\n          isActive: true,\r\n          isCompleted: false,\r\n          isEditing: false,\r\n        };\r\n\r\n        this.#todoLists.push(storage);\r\n      } else {\r\n        let editedIndex = this.#todoLists.findIndex((todoItem) => todoItem.isEditing);\r\n        this.#todoLists[editedIndex].todo = this.todoInput.value;\r\n        this.#todoLists[editedIndex].isEditing = false;\r\n      }\r\n    }\r\n\r\n    localStorage.setItem('Todos', JSON.stringify(this.#todoLists));\r\n    this.todoInput.value = '';\r\n    this._renderTodoItem('all');\r\n    this._countTodo();\r\n  }\r\n}\r\n\r\nconst todo = new Todo();\r\n"],"names":["$63a2a9cb56255ced$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$91f06d233fb295cb$export$2e2bcd8739ae039","descriptor","call","value","$cfafd7bd727718cb$export$2e2bcd8739ae039","$3b30310a11d769ec$export$2e2bcd8739ae039","obj","privateCollection","$a33675d45e16a910$export$2e2bcd8739ae039","set","$613067712a285d8d$export$2e2bcd8739ae039","writable","$97039f73d3457507$export$2e2bcd8739ae039","$9bd79d1c60c99532$export$2e2bcd8739ae039","__destrWrapper","v","$178a5e9aee1d5ea4$export$2e2bcd8739ae039","$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$c72d2f76d354839a$exports","URL","resolve","import","meta","url","toString","$760ced14e58fd451$exports","$12c51030c18c1e33$var$_todoLists","WeakMap","$12c51030c18c1e33$var$_index","$12c51030c18c1e33$var$_currentState","_clearCompletedTodo","this","filter","allTodo","isCompleted","localStorage","setItem","stringify","_renderTodoItem","_countTodo","itemsCounter","textContent","_dragndrop3","e","preventDefault","draggingItem","todoContainer","querySelector","nextSibling","querySelectorAll","find","sibling","clientY","offsetTop","offsetHeight","insertBefore","_dragndrop2","container","target","closest","classList","remove","_dragndrop","setTimeout","add","_toggleBackgroundColor","body","toggle","contains","bgToggle","src","$parcel$interopDefault","alt","_removePreviousActiveNav","document","forEach","navBtn","_toggleActiveNav","_showAllTodoItems","_showActiveTodoItems","_showCompletedTodoItems","_deleteTodo","delBtn","todoIndex","findIndex","todo","parseInt","splice","_markCompletedCheck","input","nextElementSibling","checked","isActive","_markCompleted","firstElementChild","lastElementChild","_toggleMenuBtns","elipsis","style","opacity","editContainer","element","parentElement","addEventListener","todoInput","trim","focus","isEditing","filteredTodos","html","innerHTML","todoItem","getElementById","_addTodoItem","every","storage","push","editedIndex","constructor","getItem","form","allBtn","activeBtn","completedBtn","navBtns","clearCompleted","bind","nav"],"version":3,"file":"index.19bddd03.js.map"}