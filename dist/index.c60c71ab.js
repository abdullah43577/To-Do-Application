!function(){function e(e,t,i){if(!t.has(e))throw new TypeError("attempted to "+i+" private field on non-instance");return t.get(e)}function t(e,t){return t.get?t.get.call(e):t.value}function i(i,s){return t(i,e(i,s,"get"))}function s(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function r(e,t,i){s(e,t),t.set(e,i)}function n(e,t){if(t.set){if(!t.get)throw new TypeError("attempted to read set only private field");return"__destrWrapper"in t||(t.__destrWrapper={set value(i){t.set.call(e,i)},get value(){return t.get.call(e)}}),t.__destrWrapper}if(!t.writable)throw new TypeError("attempted to set read only private field");return t}function o(t,i){return n(t,e(t,i,"update"))}var l=new WeakMap,a=new WeakMap;new class{_showAllTodoItems(){this._renderTodoItem("all")}_showActiveTodoItems(){this._renderTodoItem("active")}_showCompletedTodoItems(){this._renderTodoItem("completed")}_deleteTodo(e){let t=e.target.closest(".delete-container");if(!t)return;let s=i(this,l).indexOf(i(this,l)[parseInt(t.id)-1]);i(this,l).splice(s,1),localStorage.setItem("Todos",JSON.stringify(i(this,l))),this._renderTodoItem("all")}_markCompleted(e){let t=e.target.closest('input[type="checkbox"]');if(!t)return;t.nextElementSibling.classList.toggle("checked");let s=i(this,l).findIndex((e=>e.id===parseInt(t.id)));t.checked?(i(this,l)[s].isCompleted=!0,i(this,l)[s].isActive=!1):(i(this,l)[s].isCompleted=!1,i(this,l)[s].isActive=!0),localStorage.setItem("Todos",JSON.stringify(i(this,l)))}_toggleMenuBtns(e){let t=e.target.closest(".fa-ellipsis");if(!t)return;t.nextElementSibling.classList.toggle("hidden"),t.nextElementSibling.classList.toggle("flex");let s=t.nextElementSibling.firstElementChild,r=s.parentElement.parentElement.firstElementChild.lastElementChild,n=s.nextElementSibling;s.addEventListener("click",(()=>{this.todoInput.value=r.textContent.trim(),s.classList.add("hidden"),n.classList.remove("hidden"),n.classList.add("flex")})),n.addEventListener("click",(()=>{r.textContent=this.todoInput.value,s.classList.remove("hidden"),n.classList.add("hidden"),n.classList.remove("flex");let e=i(this,l).findIndex((e=>e.id===parseInt(n.id)));this.todoInput.value="",i(this,l)[e].todo=r.textContent,localStorage.setItem("Todos",JSON.stringify(i(this,l)))}))}_renderTodoItem(e){let t=[],s="";if(i(this,l))switch(e){case"all":default:t=i(this,l);break;case"active":t=i(this,l).filter((e=>e.isActive));break;case"completed":t=i(this,l).filter((e=>e.isCompleted))}t.forEach((e=>{s+=`\n        <div class="todo--container relative flex cursor-pointer items-center justify-between border-b border-veryDarkGrayishBlue bg-veryLightGray px-5 py-4 dark:border-veryLightGrayishBlue dark:bg-veryDarkDesaturatedBlue" draggable="true">\n          <div class="todo-content flex items-center">\n            <input type="checkbox" class="mr-3 cursor-pointer" id="${e.id}"/>\n            <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">${e.todo}</p>\n          </div>\n\n          <i class="fa-solid fa-ellipsis fa-lg cursor-pointer text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n\n            <div class="editdel-container absolute right-0 top-8 hidden h-[80px] w-[100px] flex-col justify-center gap-[0.5rem] rounded-lg bg-veryLightGray px-2 z-10 dark:bg-veryDarkGrayishBlue">\n                <div class="edit-container flex cursor-pointer items-center justify-around">\n                  <i class="fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n                  <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">Edit</p>\n                </div>\n                \n                <div class="submit-container cursor-pointer items-center justify-around hidden" id="${e.id}">\n                  <i class="fa-solid fa-pen-to-square text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n                  <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">Submit</p>\n                </div>\n\n                <div class="delete-container flex w-full cursor-pointer items-center justify-around border-t border-veryDarkGrayishBlue pt-2" id="${e.id}">\n                  <i class="fa-solid fa-trash text-veryDarkGrayishBlue dark:text-lightGrayishBlue"></i>\n                  <p class="text-sm text-veryDarkGrayishBlue dark:text-lightGrayishBlue">Delete</p>\n                </div>\n              </div>\n        </div>`})),this.todoContainer.innerHTML=s||'<div class="relative flex cursor-pointer items-center justify-between bg-veryLightGray px-5 py-4 dark:bg-veryDarkDesaturatedBlue text-veryDarkGrayishBlue dark:text-lightGrayishBlue text-sm">There are no todos at this time!</div>',i(this,l).forEach((e=>{if(e.isCompleted){const t=document.getElementById(e.id);t&&(t.nextElementSibling.classList.add("checked"),t.checked=!0)}}))}_addTodoItem(e){if(e.preventDefault(),this.todoInput.value){++o(this,a).value,localStorage.setItem("TodosIndex",i(this,a));let e={id:i(this,a),todo:this.todoInput.value.trim(),isActive:!0,isCompleted:!1};i(this,l).push(e),localStorage.setItem("Todos",JSON.stringify(i(this,l))),this.todoInput.value="",this._renderTodoItem("all")}}constructor(){r(this,l,{writable:!0,value:JSON.parse(localStorage.getItem("Todos"))||[]}),r(this,a,{writable:!0,value:parseInt(localStorage.getItem("TodosIndex"))||0}),this.form=document.querySelector("form"),this.todoInput=document.querySelector(".todoInput"),this.todoContainer=document.querySelector(".todo--section"),this.allBtn=document.querySelector(".all"),this.activeBtn=document.querySelector(".active"),this.completedBtn=document.querySelector(".completed"),this.form.addEventListener("submit",this._addTodoItem.bind(this)),this.todoContainer.addEventListener("click",this._toggleMenuBtns.bind(this)),this.todoContainer.addEventListener("click",this._markCompleted.bind(this)),this.todoContainer.addEventListener("click",this._deleteTodo.bind(this)),this.allBtn.addEventListener("click",this._showAllTodoItems.bind(this)),this.activeBtn.addEventListener("click",this._showActiveTodoItems.bind(this)),this.completedBtn.addEventListener("click",this._showCompletedTodoItems.bind(this)),this._renderTodoItem("all")}}}();
//# sourceMappingURL=index.c60c71ab.js.map
